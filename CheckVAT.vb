'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System.Runtime.Serialization

Namespace CheckVAT

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),
     System.Runtime.Serialization.DataContractAttribute(Name:="matchCode", [Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types")>
    Public Enum matchCode As Integer

        <System.Runtime.Serialization.EnumMemberAttribute(Value:="1")>
        _1 = 0

        <System.Runtime.Serialization.EnumMemberAttribute(Value:="2")>
        _2 = 1

        <System.Runtime.Serialization.EnumMemberAttribute(Value:="3")>
        _3 = 2
    End Enum

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.ServiceModel.ServiceContractAttribute([Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat", ConfigurationName:="CheckVAT.checkVatPortType")>
    Public Interface checkVatPortType

        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>
        Function checkVat(ByVal request As CheckVAT.checkVatRequest) As CheckVAT.checkVatResponse

        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>
        Function checkVatAsync(ByVal request As CheckVAT.checkVatRequest) As System.Threading.Tasks.Task(Of CheckVAT.checkVatResponse)

        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>
        Function checkVatApprox(ByVal request As CheckVAT.checkVatApproxRequest) As CheckVAT.checkVatApproxResponse

        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>
        Function checkVatApproxAsync(ByVal request As CheckVAT.checkVatApproxRequest) As System.Threading.Tasks.Task(Of CheckVAT.checkVatApproxResponse)
    End Interface

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.ServiceModel.MessageContractAttribute(IsWrapped:=False)>
    Partial Public Class checkVatRequest

        <System.ServiceModel.MessageBodyMemberAttribute(Name:="checkVat", [Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types", Order:=0)>
        Public Body As CheckVAT.checkVatRequestBody

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal Body As CheckVAT.checkVatRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types")>
    Partial Public Class checkVatRequestBody

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=0)>
        Public countryCode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=1)>
        Public vatNumber As String

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal countryCode As String, ByVal vatNumber As String)
            MyBase.New
            Me.countryCode = countryCode
            Me.vatNumber = vatNumber
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.ServiceModel.MessageContractAttribute(IsWrapped:=False)>
    Partial Public Class checkVatResponse

        <System.ServiceModel.MessageBodyMemberAttribute(Name:="checkVatResponse", [Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types", Order:=0)>
        Public Body As CheckVAT.checkVatResponseBody

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal Body As CheckVAT.checkVatResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types")>
    Partial Public Class checkVatResponseBody

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=0)>
        Public countryCode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=1)>
        Public vatNumber As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=2)>
        Public requestDate As String

        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>
        Public valid As Boolean

        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>
        Public name As String

        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>
        Public address As String

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal countryCode As String, ByVal vatNumber As String, ByVal requestDate As String, ByVal valid As Boolean, ByVal name As String, ByVal address As String)
            MyBase.New
            Me.countryCode = countryCode
            Me.vatNumber = vatNumber
            Me.requestDate = requestDate
            Me.valid = valid
            Me.name = name
            Me.address = address
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.ServiceModel.MessageContractAttribute(IsWrapped:=False)>
    Partial Public Class checkVatApproxRequest

        <System.ServiceModel.MessageBodyMemberAttribute(Name:="checkVatApprox", [Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types", Order:=0)>
        Public Body As CheckVAT.checkVatApproxRequestBody

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal Body As CheckVAT.checkVatApproxRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types")>
    Partial Public Class checkVatApproxRequestBody

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=0)>
        Public countryCode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=1)>
        Public vatNumber As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=2)>
        Public traderName As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=3)>
        Public traderCompanyType As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=4)>
        Public traderStreet As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=5)>
        Public traderPostcode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=6)>
        Public traderCity As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=7)>
        Public requesterCountryCode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=8)>
        Public requesterVatNumber As String

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal countryCode As String, ByVal vatNumber As String, ByVal traderName As String, ByVal traderCompanyType As String, ByVal traderStreet As String, ByVal traderPostcode As String, ByVal traderCity As String, ByVal requesterCountryCode As String, ByVal requesterVatNumber As String)
            MyBase.New
            Me.countryCode = countryCode
            Me.vatNumber = vatNumber
            Me.traderName = traderName
            Me.traderCompanyType = traderCompanyType
            Me.traderStreet = traderStreet
            Me.traderPostcode = traderPostcode
            Me.traderCity = traderCity
            Me.requesterCountryCode = requesterCountryCode
            Me.requesterVatNumber = requesterVatNumber
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.ServiceModel.MessageContractAttribute(IsWrapped:=False)>
    Partial Public Class checkVatApproxResponse

        <System.ServiceModel.MessageBodyMemberAttribute(Name:="checkVatApproxResponse", [Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types", Order:=0)>
        Public Body As CheckVAT.checkVatApproxResponseBody

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal Body As CheckVAT.checkVatApproxResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="urn:ec.europa.eu:taxud:vies:services:checkVat:types")>
    Partial Public Class checkVatApproxResponseBody

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=0)>
        Public countryCode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=1)>
        Public vatNumber As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=2)>
        Public requestDate As String

        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>
        Public valid As Boolean

        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>
        Public traderName As String

        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>
        Public traderCompanyType As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=6)>
        Public traderAddress As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=7)>
        Public traderStreet As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=8)>
        Public traderPostcode As String

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=9)>
        Public traderCity As String

        <System.Runtime.Serialization.DataMemberAttribute(Order:=10)>
        Public traderNameMatch As CheckVAT.matchCode

        <System.Runtime.Serialization.DataMemberAttribute(Order:=11)>
        Public traderCompanyTypeMatch As CheckVAT.matchCode

        <System.Runtime.Serialization.DataMemberAttribute(Order:=12)>
        Public traderStreetMatch As CheckVAT.matchCode

        <System.Runtime.Serialization.DataMemberAttribute(Order:=13)>
        Public traderPostcodeMatch As CheckVAT.matchCode

        <System.Runtime.Serialization.DataMemberAttribute(Order:=14)>
        Public traderCityMatch As CheckVAT.matchCode

        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=False, Order:=15)>
        Public requestIdentifier As String

        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(
                    ByVal countryCode As String,
                    ByVal vatNumber As String,
                    ByVal requestDate As String,
                    ByVal valid As Boolean,
                    ByVal traderName As String,
                    ByVal traderCompanyType As String,
                    ByVal traderAddress As String,
                    ByVal traderStreet As String,
                    ByVal traderPostcode As String,
                    ByVal traderCity As String,
                    ByVal traderNameMatch As CheckVAT.matchCode,
                    ByVal traderCompanyTypeMatch As CheckVAT.matchCode,
                    ByVal traderStreetMatch As CheckVAT.matchCode,
                    ByVal traderPostcodeMatch As CheckVAT.matchCode,
                    ByVal traderCityMatch As CheckVAT.matchCode,
                    ByVal requestIdentifier As String)
            MyBase.New
            Me.countryCode = countryCode
            Me.vatNumber = vatNumber
            Me.requestDate = requestDate
            Me.valid = valid
            Me.traderName = traderName
            Me.traderCompanyType = traderCompanyType
            Me.traderAddress = traderAddress
            Me.traderStreet = traderStreet
            Me.traderPostcode = traderPostcode
            Me.traderCity = traderCity
            Me.traderNameMatch = traderNameMatch
            Me.traderCompanyTypeMatch = traderCompanyTypeMatch
            Me.traderStreetMatch = traderStreetMatch
            Me.traderPostcodeMatch = traderPostcodeMatch
            Me.traderCityMatch = traderCityMatch
            Me.requestIdentifier = requestIdentifier
        End Sub
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Public Interface checkVatPortTypeChannel
        Inherits CheckVAT.checkVatPortType, System.ServiceModel.IClientChannel
    End Interface

    <System.Diagnostics.DebuggerStepThroughAttribute(),
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Partial Public Class checkVatPortTypeClient
        Inherits System.ServiceModel.ClientBase(Of CheckVAT.checkVatPortType)
        Implements CheckVAT.checkVatPortType

        Public Sub New()
            MyBase.New
        End Sub

        'Public Sub New(ByVal endpointConfigurationName As String)
        '    MyBase.New(endpointConfigurationName)
        'End Sub

        'Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
        '    MyBase.New(endpointConfigurationName, remoteAddress)
        'End Sub

        'Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
        '    MyBase.New(endpointConfigurationName, remoteAddress)
        'End Sub

        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Function CheckVAT_checkVatPortType_checkVat(ByVal request As CheckVAT.checkVatRequest) As CheckVAT.checkVatResponse Implements CheckVAT.checkVatPortType.checkVat
            Return MyBase.Channel.checkVat(request)
        End Function

        Public Function checkVat(ByRef countryCode As String, ByRef vatNumber As String, <System.Runtime.InteropServices.OutAttribute()> ByRef valid As Boolean, <System.Runtime.InteropServices.OutAttribute()> ByRef name As String, <System.Runtime.InteropServices.OutAttribute()> ByRef address As String) As String
            Dim inValue As CheckVAT.checkVatRequest = New CheckVAT.checkVatRequest()
            inValue.Body = New CheckVAT.checkVatRequestBody()
            inValue.Body.countryCode = countryCode
            inValue.Body.vatNumber = vatNumber
            Dim retVal As CheckVAT.checkVatResponse = CType(Me, CheckVAT.checkVatPortType).checkVat(inValue)
            countryCode = retVal.Body.countryCode
            vatNumber = retVal.Body.vatNumber
            valid = retVal.Body.valid
            name = retVal.Body.name
            address = retVal.Body.address
            Return retVal.Body.requestDate
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Function CheckVAT_checkVatPortType_checkVatAsync(ByVal request As CheckVAT.checkVatRequest) As System.Threading.Tasks.Task(Of CheckVAT.checkVatResponse) Implements CheckVAT.checkVatPortType.checkVatAsync
            Return MyBase.Channel.checkVatAsync(request)
        End Function

        Public Function checkVatAsync(ByVal countryCode As String, ByVal vatNumber As String) As System.Threading.Tasks.Task(Of CheckVAT.checkVatResponse)
            Dim inValue As CheckVAT.checkVatRequest = New CheckVAT.checkVatRequest()
            inValue.Body = New CheckVAT.checkVatRequestBody()
            inValue.Body.countryCode = countryCode
            inValue.Body.vatNumber = vatNumber
            Return CType(Me, CheckVAT.checkVatPortType).checkVatAsync(inValue)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Function CheckVAT_checkVatPortType_checkVatApprox(ByVal request As CheckVAT.checkVatApproxRequest) As CheckVAT.checkVatApproxResponse Implements CheckVAT.checkVatPortType.checkVatApprox
            Return MyBase.Channel.checkVatApprox(request)
        End Function

        Public Function checkVatApprox(
                    ByRef countryCode As String,
                    ByRef vatNumber As String,
                    ByRef traderName As String,
                    ByRef traderCompanyType As String,
                    ByRef traderStreet As String,
                    ByRef traderPostcode As String,
                    ByRef traderCity As String,
                    ByVal requesterCountryCode As String,
                    ByVal requesterVatNumber As String,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef valid As Boolean,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderAddress As String,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderNameMatch As CheckVAT.matchCode,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderCompanyTypeMatch As CheckVAT.matchCode,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderStreetMatch As CheckVAT.matchCode,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderPostcodeMatch As CheckVAT.matchCode,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef traderCityMatch As CheckVAT.matchCode,
                    <System.Runtime.InteropServices.OutAttribute()> ByRef requestIdentifier As String) As String
            Dim inValue As CheckVAT.checkVatApproxRequest = New CheckVAT.checkVatApproxRequest()
            inValue.Body = New CheckVAT.checkVatApproxRequestBody()
            inValue.Body.countryCode = countryCode
            inValue.Body.vatNumber = vatNumber
            inValue.Body.traderName = traderName
            inValue.Body.traderCompanyType = traderCompanyType
            inValue.Body.traderStreet = traderStreet
            inValue.Body.traderPostcode = traderPostcode
            inValue.Body.traderCity = traderCity
            inValue.Body.requesterCountryCode = requesterCountryCode
            inValue.Body.requesterVatNumber = requesterVatNumber
            Dim retVal As CheckVAT.checkVatApproxResponse = CType(Me, CheckVAT.checkVatPortType).checkVatApprox(inValue)
            countryCode = retVal.Body.countryCode
            vatNumber = retVal.Body.vatNumber
            valid = retVal.Body.valid
            traderName = retVal.Body.traderName
            traderCompanyType = retVal.Body.traderCompanyType
            traderAddress = retVal.Body.traderAddress
            traderStreet = retVal.Body.traderStreet
            traderPostcode = retVal.Body.traderPostcode
            traderCity = retVal.Body.traderCity
            traderNameMatch = retVal.Body.traderNameMatch
            traderCompanyTypeMatch = retVal.Body.traderCompanyTypeMatch
            traderStreetMatch = retVal.Body.traderStreetMatch
            traderPostcodeMatch = retVal.Body.traderPostcodeMatch
            traderCityMatch = retVal.Body.traderCityMatch
            requestIdentifier = retVal.Body.requestIdentifier
            Return retVal.Body.requestDate
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Function CheckVAT_checkVatPortType_checkVatApproxAsync(ByVal request As CheckVAT.checkVatApproxRequest) As System.Threading.Tasks.Task(Of CheckVAT.checkVatApproxResponse) Implements CheckVAT.checkVatPortType.checkVatApproxAsync
            Return MyBase.Channel.checkVatApproxAsync(request)
        End Function

        Public Function checkVatApproxAsync(ByVal countryCode As String, ByVal vatNumber As String, ByVal traderName As String, ByVal traderCompanyType As String, ByVal traderStreet As String, ByVal traderPostcode As String, ByVal traderCity As String, ByVal requesterCountryCode As String, ByVal requesterVatNumber As String) As System.Threading.Tasks.Task(Of CheckVAT.checkVatApproxResponse)
            Dim inValue As CheckVAT.checkVatApproxRequest = New CheckVAT.checkVatApproxRequest()
            inValue.Body = New CheckVAT.checkVatApproxRequestBody()
            inValue.Body.countryCode = countryCode
            inValue.Body.vatNumber = vatNumber
            inValue.Body.traderName = traderName
            inValue.Body.traderCompanyType = traderCompanyType
            inValue.Body.traderStreet = traderStreet
            inValue.Body.traderPostcode = traderPostcode
            inValue.Body.traderCity = traderCity
            inValue.Body.requesterCountryCode = requesterCountryCode
            inValue.Body.requesterVatNumber = requesterVatNumber
            Return CType(Me, CheckVAT.checkVatPortType).checkVatApproxAsync(inValue)
        End Function
    End Class
End Namespace
